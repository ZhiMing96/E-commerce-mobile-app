{"version":3,"sources":["webpack:///./src/app/register/register.module.ts","webpack:///./src/app/register/register.page.html","webpack:///./src/app/register/register.page.scss","webpack:///./src/app/register/register.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAGE;AACiC;AAEhF,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAYF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAV9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,2FAAsB;aACvB;YACD,YAAY,EAAE,CAAC,2DAAY,CAAC;SAC7B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;AC5B/B,0IAA0I,aAAa,kEAAkE,cAAc,q/D;;;;;;;;;;;ACAvO,+DAA+D,2I;;;;;;;;;;;;;;;;;;;ACAb;AAES;AACV;AAQjD;IAYE,sBAAoB,aAA4B,EAAS,eAAgC;QAArE,kBAAa,GAAb,aAAa,CAAe;QAAS,oBAAe,GAAf,eAAe,CAAiB;IAAI,CAAC;IAE9F,+BAAQ,GAAR;IACA,CAAC;IAED,qCAAc,GAAd;QAAA,iBAmBC;QAlBC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,eAAe,EAAE;YACzC,IAAI,CAAC,YAAY,CAAC,yBAAyB,CAAC,CAAC;SAC9C;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAChH,kBAAQ;gBACN,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC;gBACjC,KAAI,CAAC,YAAY,CAAC,iCAAiC,GAAG,KAAI,CAAC,SAAS,GAAG,GAAG,GAAG,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC;YACpG,CAAC,EACD,eAAK;gBACH,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACzC,CAAC,CACF,CAAC;SACH;IACH,CAAC;IAEK,mCAAY,GAAlB,UAAmB,OAAe;;;;;4BAClB,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,MAAM,EAAE,SAAS,GAAG,OAAO;4BAC3B,OAAO,EAAE,CAAC,IAAI,CAAC;yBAChB,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACvB;IA5CU,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,kGAAmC;;SAEpC,CAAC;+EAcmC,sEAAa,EAA0B,8DAAe;OAZ9E,YAAY,CAgDxB;IAAD,mBAAC;CAAA;AAhDwB","file":"register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\n\nimport { RegisterPage } from './register.page';\nimport { SharedComponentsModule } from '../components/shared-components.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedComponentsModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","module.exports = \"<app-header></app-header>\\n\\n<ion-content color = \\\"floralwhite\\\">\\n\\n<div *ngIf=\\\"infoMessage\\\" class=\\\"infoText\\\">\\n{{infoMessage}}\\n</div>\\n\\n<div *ngIf=\\\"errorMessage\\\" class=\\\"errorText\\\">\\n\\t{{errorMessage}}\\n</div>\\n\\n\\n    <ion-grid>\\n      <ion-row justify-content-center>\\n        <ion-col align-self-center size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\n          <div text-center>\\n            <h6>Hi, seems like you're new here!</h6>\\n            <h6>Create an account below <ion-icon ios=\\\"ios-arrow-round-down\\\" md=\\\"md-arrow-round-down\\\"></ion-icon></h6>\\n          </div>\\n          <div padding>\\n            <ion-item>\\n              <ion-label>First Name</ion-label>\\n                <ion-input [(ngModel)]=\\\"firstName\\\"  placeholder=\\\"First Name\\\"  required></ion-input>\\n            </ion-item> \\n            <br/>\\n            <ion-item>\\n              <ion-label>Last Name</ion-label>\\n                <ion-input [(ngModel)]=\\\"lastName\\\"  placeholder=\\\"Last Name\\\" required></ion-input>\\n            </ion-item>\\n            <br/>\\n            <ion-item>\\n              <ion-label>Username</ion-label>\\n                <ion-input [(ngModel)]=\\\"username\\\" placeholder=\\\"Username\\\" required></ion-input>\\n            </ion-item>\\n            <br/>\\n            <ion-item>\\n              <ion-label>Email</ion-label>\\n                <ion-input [(ngModel)]=\\\"email\\\" placeholder=\\\"zhcqmember@email.com\\\" required></ion-input>\\n            </ion-item>\\n            <br/>\\n            <ion-item>\\n              <ion-label>Password</ion-label>\\n                <ion-input [(ngModel)]=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" required></ion-input>\\n            </ion-item>\\n            <br/>\\n            <ion-item>\\n              <ion-label>Re-enter password</ion-label>\\n                <ion-input [(ngModel)]=\\\"confirmPassword\\\" type=\\\"password\\\" placeholder=\\\"Re enter password\\\" required></ion-input>\\n            </ion-item>\\n          </div>\\n          <div padding>\\n            <ion-button color=\\\"light\\\" (click)=\\\"registerMember()\\\" size=\\\"small\\\" expand=\\\"block\\\">Register</ion-button>\\n          </div>\\n          </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n</ion-content>\\n<app-footer></app-footer>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Member } from '../entities/member';\nimport { MemberService } from '../services/member.service';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\n\nexport class RegisterPage implements OnInit {\n\n\n  firstName: string;\n  lastName: string;\n  username: string;\n  password: string;\n  confirmPassword: string;\n  email: string;\n\n  newMember: Member;\n\n  constructor(private memberService: MemberService, public alertController: AlertController) { }\n\n  ngOnInit() {\n  }\n\n  registerMember() {\n    console.log(this.firstName);\n    console.log(this.lastName);\n    console.log(this.username);\n    console.log(this.password);\n    console.log(this.email);\n    if (this.password != this.confirmPassword) {\n      this.presentAlert(\"Password does not match\");\n    } else {\n      this.memberService.createMember(this.firstName, this.lastName, this.username, this.password, this.email).subscribe(\n        response => {\n          this.newMember = response.member;\n          this.presentAlert(\"Your account has been created, \" + this.firstName + \" \" + this.lastName + \"!\");\n        },\n        error => {\n          this.presentAlert(error.substring(37));\n        }\n      );\n    }\n  }\n\n  async presentAlert(message: string) {\n    const alert = await this.alertController.create({\n      header: \"ERROR: \" + message,\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n\n\n}\n"],"sourceRoot":""}